今天带来LC001-两数之和的刷题思路。

题目：给定一个整数数组 nums 和一个整数目标值 target，请你在该数组中找出 和为目标值 target  的那 两个 整数，并返回它们的数组下标。
你可以假设每种输入只会对应一个答案。但是，数组中同一个元素在答案里不能重复出现。
你可以按任意顺序返回答案。
来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/two-sum
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。

很久没有刷题了，于是我决定从LC第一题开始刷完所有题，并对过程做一个记录，其中包括了我做题的思路以及一些吐槽。鄙人太菜，望各位轻喷。

鄙人只对C++较为熟悉，但已久未编程。在接触到这道题的时候，我首先回忆了vector模板类的一些用法，如count、push_back等。
我首先考虑了较为暴力的方法：列表中所有元素逐个相加比对。但是这种方法过于暴力，所以我考虑了按照顺序每个元素只与其后的元素相加比对的方法。
之后我参考了Leetcode社区，依据hash表查询时间复杂度仅为O(1)的重要性质，想到了更简单的方法。我们先根据给定队列建hash表，然后遍历队列元素，以(target-元素值)为键，在hash表中直接查询是否有指定值。
与此同时，我回忆了unordered_map的相关用法。unordered_map直接可以直接用重载的[]运算符建k-v索引，然后使用迭代器iterator的find函数来查找表中是否有指定值，若存在则it直接指向该结点；否则，it指向unordered_map.end()。


author：Charming
（转载请注明出处）
